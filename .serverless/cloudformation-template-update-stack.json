{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "ContainerlessELBRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ecs.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "elb-role-policy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                    "elasticloadbalancing:DeregisterTargets",
                    "elasticloadbalancing:Describe*",
                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                    "elasticloadbalancing:RegisterTargets",
                    "ec2:Describe*",
                    "ec2:AuthorizeSecurityGroupIngress"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "ContainerlessELB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "LoadBalancerAttributes": [
          {
            "Key": "idle_timeout.timeout_seconds",
            "Value": 30
          }
        ],
        "Subnets": [
          {
            "Fn::ImportValue": "triple-az-vpc-PublicSubnetAz1"
          },
          {
            "Fn::ImportValue": "triple-az-vpc-PublicSubnetAz2"
          },
          {
            "Fn::ImportValue": "triple-az-vpc-PublicSubnetAz3"
          }
        ],
        "SecurityGroups": [
          {
            "Fn::ImportValue": "vtha-SecurityGroup"
          }
        ]
      }
    },
    "ContainerlessListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "DependsOn": "ContainerlessELBRole",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "ContainerlessDefaultTargetGroup"
            }
          }
        ],
        "LoadBalancerArn": {
          "Ref": "ContainerlessELB"
        },
        "Port": "80",
        "Protocol": "HTTP"
      }
    },
    "ContainerlessDefaultTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "DependsOn": "ContainerlessELB",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "VpcId": {
          "Fn::ImportValue": "triple-az-vpc-VpcID"
        }
      }
    },
    "hello1": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": "arn:aws:ecs:ap-southeast-2:005213230316:cluster/vtha-ECSCluster-1A5ZYNUN7X46N",
        "DesiredCount": 1,
        "LoadBalancers": [
          {
            "ContainerName": "hello1",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "hello1TargetGroup"
            }
          }
        ],
        "Role": {
          "Ref": "ContainerlessELBRole"
        },
        "TaskDefinition": {
          "Ref": "hello1TaskDefinition"
        }
      }
    },
    "hello1TaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Family": {
          "Fn::Sub": "${AWS::StackName}-task"
        },
        "ContainerDefinitions": [
          {
            "Name": "hello1",
            "Essential": "true",
            "Image": "005213230316.dkr.ecr.ap-southeast-2.amazonaws.com/serverlecs:-hello-1-hello-1483064358",
            "Memory": 128,
            "PortMappings": [
              {
                "ContainerPort": 3000
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "hello1CloudwatchLogGroup"
                },
                "awslogs-region": {
                  "Ref": "AWS::Region"
                },
                "awslogs-stream-prefix": {
                  "Ref": "AWS::StackName"
                }
              }
            }
          }
        ]
      }
    },
    "hello1CloudwatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "hello1-${AWS::StackName}"
        },
        "RetentionInDays": 7
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    }
  }
}